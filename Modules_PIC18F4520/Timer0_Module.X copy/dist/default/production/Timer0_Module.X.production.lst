

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Thu Mar 14 15:16:40 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    10                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    14  0000                     
    15                           ; Version 2.05
    16                           ; Generated 20/12/2018 GMT
    17                           ; 
    18                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC18F4520 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     _LATD	set	3980
    50  0000                     _TRISD	set	3989
    51  0000                     _TRISA	set	3986
    52  0000                     _RCONbits	set	4048
    53  0000                     _INTCONbits	set	4082
    54  0000                     _T0CONbits	set	4053
    55                           
    56                           ; #config settings
    57  0000                     
    58                           	psect	cinit
    59  000052                     __pcinit:
    60                           	opt callstack 0
    61  000052                     start_initialization:
    62                           	opt callstack 0
    63  000052                     __initialization:
    64                           	opt callstack 0
    65                           
    66                           ; Clear objects allocated to COMRAM (2 bytes)
    67  000052  6A02               	clrf	(__pbssCOMRAM+1)& (0+255),c
    68  000054  6A01               	clrf	__pbssCOMRAM& (0+255),c
    69  000056                     end_of_initialization:
    70                           	opt callstack 0
    71  000056                     __end_of__initialization:
    72                           	opt callstack 0
    73  000056  9003               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    74  000058  9203               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    75  00005A  0100               	movlb	0
    76  00005C  EF1B  F000         	goto	_main	;jump to C main() function
    77                           
    78                           	psect	bssCOMRAM
    79  000001                     __pbssCOMRAM:
    80                           	opt callstack 0
    81  000001                     _tick_count:
    82                           	opt callstack 0
    83  000001                     	ds	2
    84                           
    85                           	psect	cstackCOMRAM
    86  000000                     __pcstackCOMRAM:
    87                           	opt callstack 0
    88  000000                     
    89                           ; 1 bytes @ 0x0
    90 ;;
    91 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    92 ;;
    93 ;; *************** function _main *****************
    94 ;; Defined at:
    95 ;;		line 84 in file "main.c"
    96 ;; Parameters:    Size  Location     Type
    97 ;;		None
    98 ;; Auto vars:     Size  Location     Type
    99 ;;		None
   100 ;; Return value:  Size  Location     Type
   101 ;;                  1    wreg      void 
   102 ;; Registers used:
   103 ;;		wreg, status,2
   104 ;; Tracked objects:
   105 ;;		On entry : 0/0
   106 ;;		On exit  : 0/0
   107 ;;		Unchanged: 0/0
   108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   109 ;;      Params:         0       0       0       0       0       0       0
   110 ;;      Locals:         0       0       0       0       0       0       0
   111 ;;      Temps:          0       0       0       0       0       0       0
   112 ;;      Totals:         0       0       0       0       0       0       0
   113 ;;Total ram usage:        0 bytes
   114 ;; Hardware stack levels required when called:    1
   115 ;; This function calls:
   116 ;;		Nothing
   117 ;; This function is called by:
   118 ;;		Startup code after reset
   119 ;; This function uses a non-reentrant model
   120 ;;
   121                           
   122                           	psect	text0
   123  000036                     __ptext0:
   124                           	opt callstack 0
   125  000036                     _main:
   126                           	opt callstack 30
   127                           
   128                           ;main.c: 87:     T0CONbits.TMR0ON = 0x01;
   129                           
   130                           ;incstack = 0
   131  000036  8ED5               	bsf	4053,7,c	;volatile
   132                           
   133                           ;main.c: 90:     T0CONbits.T08BIT = 1;
   134  000038  8CD5               	bsf	4053,6,c	;volatile
   135                           
   136                           ;main.c: 93:     T0CONbits.T0CS = 0;
   137  00003A  9AD5               	bcf	4053,5,c	;volatile
   138                           
   139                           ;main.c: 96:     T0CONbits.T0SE = 0;
   140  00003C  98D5               	bcf	4053,4,c	;volatile
   141                           
   142                           ;main.c: 124:     T0CONbits.PSA = 1;
   143  00003E  86D5               	bsf	4053,3,c	;volatile
   144                           
   145                           ;main.c: 132:     INTCONbits.GIE = 1;
   146  000040  8EF2               	bsf	4082,7,c	;volatile
   147                           
   148                           ;main.c: 135:     INTCONbits.PEIE = 1;
   149  000042  8CF2               	bsf	4082,6,c	;volatile
   150                           
   151                           ;main.c: 138:     INTCONbits.TMR0IE = 1;
   152  000044  8AF2               	bsf	4082,5,c	;volatile
   153                           
   154                           ;main.c: 141:     RCONbits.IPEN=0x0;
   155  000046  9ED0               	bcf	4048,7,c	;volatile
   156                           
   157                           ;main.c: 145:     TRISA = 0xFF;
   158  000048  6892               	setf	3986,c	;volatile
   159                           
   160                           ;main.c: 150:     TRISD = 0x00;
   161  00004A  0E00               	movlw	0
   162  00004C  6E95               	movwf	3989,c	;volatile
   163                           
   164                           ;main.c: 152:     LATD = 0xFF;
   165  00004E  688C               	setf	3980,c	;volatile
   166  000050                     l19:
   167                           
   168                           ;main.c: 156:     }
   169  000050  D7FF               	goto	l19
   170  000052                     __end_of_main:
   171                           	opt callstack 0
   172                           
   173 ;; *************** function _my_isr_routine *****************
   174 ;; Defined at:
   175 ;;		line 162 in file "main.c"
   176 ;; Parameters:    Size  Location     Type
   177 ;;		None
   178 ;; Auto vars:     Size  Location     Type
   179 ;;		None
   180 ;; Return value:  Size  Location     Type
   181 ;;                  1    wreg      void 
   182 ;; Registers used:
   183 ;;		wreg, status,2, status,0
   184 ;; Tracked objects:
   185 ;;		On entry : 0/0
   186 ;;		On exit  : 0/0
   187 ;;		Unchanged: 0/0
   188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   189 ;;      Params:         0       0       0       0       0       0       0
   190 ;;      Locals:         0       0       0       0       0       0       0
   191 ;;      Temps:          0       0       0       0       0       0       0
   192 ;;      Totals:         0       0       0       0       0       0       0
   193 ;;Total ram usage:        0 bytes
   194 ;; Hardware stack levels used:    1
   195 ;; This function calls:
   196 ;;		Nothing
   197 ;; This function is called by:
   198 ;;		Interrupt level 2
   199 ;; This function uses a non-reentrant model
   200 ;;
   201                           
   202                           	psect	intcode
   203  000008                     __pintcode:
   204                           	opt callstack 0
   205  000008                     _my_isr_routine:
   206                           	opt callstack 30
   207                           
   208                           ;incstack = 0
   209  000008  8203               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
   210  00000A  ED09  F000         	call	int_func,f	;refresh shadow registers
   211                           
   212                           	psect	intcode_body
   213  000012                     __pintcode_body:
   214                           	opt callstack 30
   215  000012                     int_func:
   216                           	opt callstack 30
   217  000012  0006               	pop		; remove dummy address from shadow register refresh
   218                           
   219                           ;main.c: 164:     if (INTCONbits.TMR0IE && INTCONbits.T0IF)
   220  000014  BAF2               	btfsc	4082,5,c	;volatile
   221  000016  A4F2               	btfss	4082,2,c	;volatile
   222  000018  D00C               	goto	i2l29
   223                           
   224                           ;main.c: 165:     {;main.c: 167:         INTCONbits.T0IF=0;
   225  00001A  94F2               	bcf	4082,2,c	;volatile
   226                           
   227                           ;main.c: 170:         ++tick_count;
   228  00001C  4A01               	infsnz	_tick_count,f,c
   229  00001E  2A02               	incf	_tick_count+1,f,c
   230                           
   231                           ;main.c: 174:         if (tick_count == 0xFF ){
   232  000020  2801               	incf	_tick_count,w,c
   233  000022  1002               	iorwf	_tick_count+1,w,c
   234  000024  A4D8               	btfss	status,2,c
   235  000026  D005               	goto	i2l29
   236                           
   237                           ;main.c: 176:             tick_count = 0;
   238  000028  0E00               	movlw	0
   239  00002A  6E02               	movwf	_tick_count+1,c
   240  00002C  0E00               	movlw	0
   241  00002E  6E01               	movwf	_tick_count,c
   242                           
   243                           ;main.c: 178:             LATD = ~LATD;
   244  000030  1E8C               	comf	3980,f,c	;volatile
   245  000032                     i2l29:
   246  000032  9203               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
   247  000034  0011               	retfie		f
   248  000036                     __end_of_my_isr_routine:
   249                           	opt callstack 0
   250  0000                     
   251                           	psect	rparam
   252  0000                     
   253                           	psect	temp
   254  000003                     btemp:
   255                           	opt callstack 0
   256  000003                     	ds	1
   257  0000                     int$flags	set	btemp
   258  0000                     wtemp8	set	btemp+1
   259  0000                     ttemp5	set	btemp+1
   260  0000                     ttemp6	set	btemp+4
   261  0000                     ttemp7	set	btemp+8
   262                           tosu	equ	0xFFF
   263                           tosh	equ	0xFFE
   264                           tosl	equ	0xFFD
   265                           stkptr	equ	0xFFC
   266                           pclatu	equ	0xFFB
   267                           pclath	equ	0xFFA
   268                           pcl	equ	0xFF9
   269                           tblptru	equ	0xFF8
   270                           tblptrh	equ	0xFF7
   271                           tblptrl	equ	0xFF6
   272                           tablat	equ	0xFF5
   273                           prodh	equ	0xFF4
   274                           prodl	equ	0xFF3
   275                           indf0	equ	0xFEF
   276                           postinc0	equ	0xFEE
   277                           postdec0	equ	0xFED
   278                           preinc0	equ	0xFEC
   279                           plusw0	equ	0xFEB
   280                           fsr0h	equ	0xFEA
   281                           fsr0l	equ	0xFE9
   282                           wreg	equ	0xFE8
   283                           indf1	equ	0xFE7
   284                           postinc1	equ	0xFE6
   285                           postdec1	equ	0xFE5
   286                           preinc1	equ	0xFE4
   287                           plusw1	equ	0xFE3
   288                           fsr1h	equ	0xFE2
   289                           fsr1l	equ	0xFE1
   290                           bsr	equ	0xFE0
   291                           indf2	equ	0xFDF
   292                           postinc2	equ	0xFDE
   293                           postdec2	equ	0xFDD
   294                           preinc2	equ	0xFDC
   295                           plusw2	equ	0xFDB
   296                           fsr2h	equ	0xFDA
   297                           fsr2l	equ	0xFD9
   298                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126      0       2
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _my_isr_routine in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _my_isr_routine in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _my_isr_routine in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _my_isr_routine in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _my_isr_routine in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _my_isr_routine in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _my_isr_routine in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _my_isr_routine                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _my_isr_routine (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E      0       2       1        1.6%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       2      15        0.0%
DATA                 0      0       2       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Thu Mar 14 15:16:40 2019

                     l19 0050              __CFG_BORV$3 000000             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000  
           __CFG_CPB$OFF 000000             __CFG_CPD$OFF 000000             __CFG_LVP$OFF 000000  
           __CFG_WDT$OFF 000000                     _LATD 000F8C                     i2l29 0032  
                   _main 0036                     btemp 0003                     start 000E  
          __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000             ___param_bank 000000  
                  ?_main 0000                    _TRISA 000F92                    _TRISD 000F95  
          __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000  
          __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000  
         __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000  
         __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
          __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000                    ttemp5 0004  
                  ttemp6 0007                    ttemp7 000B                    status 000FD8  
                  wtemp8 0004          __initialization 0052             __end_of_main 0052  
                 ??_main 0000            __activetblptr 000000           __CFG_XINST$OFF 000000  
         __CFG_STVREN$ON 000000               __accesstop 0080  __end_of__initialization 0056  
        __CFG_PBADEN$OFF 000000            ___rparam_used 000001           __pcstackCOMRAM 0000  
__size_of_my_isr_routine 002E                  __Hparam 0000                  __Lparam 0000  
                __pcinit 0052                  __ramtop 0600                  __ptext0 0036  
              _T0CONbits 000FD5           __pintcode_body 0012     end_of_initialization 0056  
                int_func 0012               _tick_count 0001      start_initialization 0052  
         _my_isr_routine 0008         __CFG_OSC$INTIO67 000000         __CFG_LPT1OSC$OFF 000000  
            __pbssCOMRAM 0001   __end_of_my_isr_routine 0036        __CFG_CCP2MX$PORTC 000000  
              __pintcode 0008          ?_my_isr_routine 0000                 _RCONbits 000FD0  
       __CFG_WDTPS$32768 000000                 __Hrparam 0000                 __Lrparam 0000  
     __CFG_BOREN$SBORDIS 000000            __size_of_main 001C                 int$flags 0003  
             _INTCONbits 000FF2                 intlevel2 0000         ??_my_isr_routine 0000  
